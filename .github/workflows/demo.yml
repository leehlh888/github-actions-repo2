# https://github.com/leehlh888/github-actions-repo2.git
# test1
name: Deploy website
on:
  push:
    branches:
      - main
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
# take quite a lot of time to "npm install", use Cache to speed it up
# copy npm install files to ~/.npm folder
# e.g. deps-node-modules-fb9113937050bf73dea448521ab863fc9db4ab6b0c3796be215d100d22641de1
      - name: caching
        uses: actions/cache@v3
        with: 
          path: ~/.npm
          key: deps-node-modules-${{hashFiles('**package-lock.json')}}
# will run npm install if ~/.npm not exists
      - name: Install dependencies
        run: npm ci
      - name: Lint code
        run: npm run lint
      - name: Test code
        run: npm run test
  build:
    needs: test
    runs-on: ubuntu-latest
    outputs:   # output value from Job 'build' to Job 'deploy'
      script-file: ${{steps.publish.outputs.script-file}}
    steps:
      - name: Get code
        uses: actions/checkout@v3
# reuse the cache created by Job 'test'
      - name: caching
        uses: actions/cache@v3
        with: 
          path: ~/.npm
          key: deps-node-modules-${{hashFiles('**package-lock.json')}}
      - name: Install dependencies
        run: npm ci
      - name: Build website
        run: npm run build  # once the Runner machine shutdown after workflow finished, files built lost!
      - name: publish js file # output the random generated JS file
        id: publish
#        run: find dist/assets/*.js -type f -execdir echo 'script-file={}' >> $GITHUB_OUTPUT ';'
        run: find dist/assets/*.js -type f -execdir echo 'script-file={}'
# obsolete! ::set-output instruction
#        run: find dist/assets/*.js -type f -execdir echo '::set-output name=script-file::{}' ';'
      - name: upload
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: |
            dist   
            package.json
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: download artifact
        uses: actions/download-artifact@v3
        with: 
            name: dist-files
      - name: output content
        run: ls
      - name: output filename
        run: echo "${{needs.build.outputs.script-file}}"
      - name: Deploy
        run: echo "Deploying..."
